#!/bin/bash

if [[ $# -ne 3 ]]; then
  echo "Usage: $(basename "$0") name truststore_password subject"
  echo " example: $(basename "$0") rootca mystore123 '/CN=MY Organization A Root CA/C=MY/ST=KL/L=MidValley/O=MY Organization A'"
  exit 0
fi

readonly name=$1
readonly truststore_password=$2
readonly subject=$3

if [[ -z "$JAVA_HOME" ]]; then
  echo "JAVA_HOME is not set. Please set it to your JDK installation path."
  exit 1
fi

target_path=$(realpath ./"$name")
mkdir -p "$target_path"
rm -f "$target_path"/*

ROOTCA_KEY_FILE=$target_path/ca.key
ROOTCA_CERT_FILE=$target_path/ca.crt
ROOTCA_PEM_FILE=$target_path/ca.pem
ROOTCA_JAVA_TRUSTSTORE=$target_path/java-cacerts.jks
ROOTCA_TRUSTSTORE=$target_path/cacerts.jks

(
  set -x

  openssl req \
    -new \
    -newkey rsa:4096 \
    -days 365 \
    -nodes \
    -x509 \
    -subj "$subject" \
    -keyout "$ROOTCA_KEY_FILE" \
    -out "$ROOTCA_CERT_FILE"

  cat "$ROOTCA_CERT_FILE" "$ROOTCA_KEY_FILE" >"$ROOTCA_PEM_FILE"

)

# create java truststore
JAVA_JKS_STORE=$JAVA_HOME/lib/security/cacerts
cp -v "$JAVA_JKS_STORE" "$ROOTCA_JAVA_TRUSTSTORE"
keytool -trustcacerts -keystore "$ROOTCA_JAVA_TRUSTSTORE" -storepass changeit \
  -noprompt -importcert -alias "$name" -file "$ROOTCA_CERT_FILE"

keytool -import -alias "$name" -file "$ROOTCA_CERT_FILE" \
  -keystore "$ROOTCA_TRUSTSTORE" -storepass "$truststore_password" -noprompt

openssl x509 -in "$ROOTCA_PEM_FILE" -text -noout >"$ROOTCA_PEM_FILE.txt"

find "$name"
cat <<_EOF_
Run:
  sudo cp $ROOTCA_CERT_FILE /usr/local/share/ca-certificates/$name.crt
  sudo update-ca-certificates

Do:
  Import this file into browser: $ROOTCA_CERT_FILE
_EOF_
